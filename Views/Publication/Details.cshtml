@model ForumUniversitario.Entidades.Publication

@{
    ViewData["Title"] = "Detalhes da Publicação";
}

@functions {

    async Task RenderComments(List<ForumUniversitario.Entidades.Comment> comments, int depth = 0)
    {
        foreach (var comment in comments)
        {
            <div class="comment-container" style="margin-left: @(depth * 30)px;">
                <div class="comment-content">
                    <div class="comment-header">
                        <p class="comment-user">@comment.User.AccountName</p>
                        <p class="comment-date">@comment.CreatedAt</p>
                    </div>
                    <p class="comment-text">@comment.Content</p>
                    <p class="comment-text">@comment.Id</p>

                    <button class="show-comment-button mt-4" data-comment-id="@comment.Id">
                        <img src="\Icons\message_square.svg" alt="comentar">
                    </button>
                    <div class=" mt-4 comment-box comment-box-@comment.Id">
                        <form id="commentForm-@comment.Id">
                            <textarea class="bg-gray-general-lighter p-1 rounded-10px" id="commentText-@comment.Id" rows="3" cols="80" placeholder="Digite seu comentário..."></textarea>

                            <button type="button" class="comment-button" data-publication-id="@Model.Id" data-comment-id="@comment.Id">Enviar</button>
                        </form>
                        <span class="text-danger" id="commentError-@comment.Id"></span> <!-- Novo elemento para a mensagem de erro -->
                    </div>
                </div>
            </div>

            @if (comment.ChildComments != null && comment.ChildComments.Any())
            {
                RenderComments(comment.ChildComments, depth + 1);
            }
        }
    }

}

<div class="container mx-auto p-4">
    <div class="bg-gray-general-lighter p-4 rounded green-aura mt-5 mb-5">
        <div class="flex items-center justify-between mb-2">
            <p class="text-gray-500">@ViewData["UserNamePublication"]</p>
            <p class="text-gray-500">@Model.CreatedAt</p>
            <p class="text-gray-500">@Model.CommunityName</p>
        </div>
        <h3 class="text-lg font-bold">@Model.Title</h3>
        <p class="mt-2">@Model.Content</p>
    </div>

    @if (ViewBag.AllComments != null)
    {
        RenderComments(ViewBag.AllComments);
    }

</div>

<script >

$(document).ready(function () {
    $(".show-comment-button").click(function () {
        var parentId = $(this).data("comment-id");
        $(".comment-box-" + parentId).show();
        $(this).hide();
    });

    $(".comment-button").click(function (event) {
        var $commentButton = $(this);
        var parentId = $commentButton.data("comment-id");
        var content = $("#commentText-" + parentId).val();
        var publicationId = $commentButton.data("publication-id")

        var errorElement = $("#commentError-" + parentId); // Elemento para exibir a mensagem de erro

        if (content.length < 10) {
            errorElement.text("O comentário deve ter mais de 10 caracteres.");
            return; // Impede o envio do comentário
        } else {
            errorElement.text(""); // Limpa a mensagem de erro se o conteúdo for válido
        }
           
            var comment = {
                content: content,
                publicationId: publicationId,
                parentId: parentId
            };
        
         $.ajax({
             type: "POST",
             url: `/Comment/CreateComment`, // Ajuste a URL conforme necessário
             contentType: "application/json",
             data: JSON.stringify(comment),
             success: function (response) {
                 alert(response);
                 $("#commentText-" + parentId).val("");
             },
             error: function (xhr, status, error) {
                 alert("Erro ao criar comentário: " + error.responseJSON);
             }
         });
     });
  });

</script>